{"version":3,"file":"components/carousel-vue-slide.js","sources":["webpack:///./components/carousel/vue-slide.vue?10df","webpack:///./components/carousel/cov-touch.js","webpack:///./components/carousel/vue-slide.vue?1dc0","webpack:///./components/carousel/vue-slide.vue?24e2","webpack:///./components/carousel/vue-slide.vue?ab83","webpack:///./components/carousel/vue-slide.vue","webpack:///./components/carousel/vue-slide.vue?580a","webpack:///./components/carousel/vue-slide.vue?bc28"],"sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--3-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--3-oneOf-1-2!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./vue-slide.vue?vue&type=style&index=0&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add CSS to SSR context\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesServer.js\").default\nmodule.exports.__inject__ = function (context) {\n  add(\"0fd6aa2e\", content, true, context)\n};","const TOUCH_EVENT_MAP = {\r\n  'touchstart': 1,\r\n  'touchmove': 1,\r\n  'touchend': 1\r\n}\r\n\r\nconst MOUSE_EVENT_MAP = {\r\n  'mousedown': 1,\r\n  'mousemove': 1,\r\n  'mouseup': 1\r\n}\r\n\r\nconst _ = {\r\n  on (el, type, func) {\r\n    el.addEventListener(type, func, false)\r\n  },\r\n  off (el, type, func) {\r\n    el.removeEventListener(type, func, false)\r\n  }\r\n}\r\n\r\nclass CovTouch {\r\n  constructor ({ el }) {\r\n    this._hasTouch = ('ontouchstart' in window)\r\n    this.$el = el\r\n    this.init()\r\n    this.touch = {\r\n      start: null,\r\n      end: null\r\n    }\r\n    this.state = {\r\n      swiping: false,\r\n      global: false\r\n    }\r\n    this.queue = {\r\n      'swiping': [],\r\n      'swiped': [],\r\n      'swipe-left': [],\r\n      'swipe-right': [],\r\n      'swipe-up': [],\r\n      'swipe-down': []\r\n    }\r\n  }\r\n\r\n  init () {\r\n    if (this._hasTouch) {\r\n      _.on(this.$el, 'touchstart', this.touchStart.bind(this))\r\n      _.on(window, 'touchmove', this.touchMove.bind(this))\r\n      _.on(window, 'touchend', this.touchEnd.bind(this))\r\n      _.on(window, 'touchcancel', this.touchCancel.bind(this))\r\n    } else {\r\n      _.on(this.$el, 'mousedown', this.touchStart.bind(this))\r\n      _.on(window, 'mousemove', this.touchMove.bind(this))\r\n      _.on(window, 'mouseup', this.touchEnd.bind(this))\r\n    }\r\n  }\r\n\r\n  destroy () {\r\n    if (this.$el) {\r\n      _.off(this.$el, 'touchstart', this.touchStart.bind(this))\r\n      _.off(this.$el, 'mousedown', this.touchStart.bind(this))\r\n    }\r\n\r\n    _.off(window, 'touchmove', this.touchMove.bind(this))\r\n    _.off(window, 'touchend', this.touchEnd.bind(this))\r\n    _.off(window, 'touchcancel', this.touchCancel.bind(this))\r\n    _.off(window, 'mousemove', this.touchMove.bind(this))\r\n    _.off(window, 'mouseup', this.touchEnd.bind(this))\r\n\r\n    this.queue = {\r\n      'swiping': [],\r\n      'swiped': [],\r\n      'swipe-left': [],\r\n      'swipe-right': [],\r\n      'swipe-up': [],\r\n      'swipe-down': []\r\n    }\r\n  }\r\n\r\n  setGlobal () {\r\n    this.state.global = true\r\n  }\r\n\r\n  cancelGlobal () {\r\n    this.state.global = false\r\n  }\r\n\r\n  listen (type, $el, func) {\r\n    let rect\r\n    if (!$el) {\r\n      rect = null\r\n    } else {\r\n      let tmp = $el.getBoundingClientRect()\r\n      rect = {\r\n        x: tmp.left,\r\n        y: tmp.top,\r\n        width: tmp.width,\r\n        height: tmp.height\r\n      }\r\n    }\r\n\r\n    let token = Math.random() * 9999 + type\r\n    this.queue[type].push({\r\n      $el: $el,\r\n      token: token,\r\n      func: func,\r\n      rect: rect\r\n    })\r\n  }\r\n\r\n  leave (type, token) {\r\n    if (!this.queue[type]) return false\r\n    for (let i = 0, len = this.queue[type].length; i < len; i++) {\r\n      if (this.queue[type].token === token) {\r\n        this.queue[type].splice(i - 1, 1)\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  update () {\r\n    let keys = Object.keys(this.queue)\r\n    let tmp\r\n    for (let key of keys) {\r\n      this.queue[key].forEach(item => {\r\n        if (item.$el) {\r\n          tmp = item.$el.getBoundingClientRect()\r\n          item.rect = {\r\n            x: tmp.left,\r\n            y: tmp.top,\r\n            width: tmp.width,\r\n            height: tmp.height\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  clear () {\r\n    let keys = Object.keys(this.queue)\r\n    for (let key of keys) {\r\n      this.queue[key].length = 0\r\n    }\r\n  }\r\n\r\n  notice (type, rect) {\r\n    let rectTmp = {}\r\n    let once = true\r\n    let tmpFunc = null\r\n    for (let i = 0, len = this.queue[type].length; i < len; i++) {\r\n      rectTmp = this.queue[type][i].rect\r\n      if (!rectTmp) {\r\n        tmpFunc = this.queue[type][i].func\r\n      } else {\r\n        if (this.rectIn(rect, rectTmp) && !this.state.global) {\r\n          this.queue[type][i].func(this.touch.start, this.touch.end)\r\n          once = false\r\n        }\r\n      }\r\n    }\r\n    if (once && tmpFunc) {\r\n      tmpFunc(this.touch.start, this.touch.end)\r\n    }\r\n  }\r\n\r\n  rectIn (small, big) {\r\n    if (small.x > big.x &&\r\n      small.x + small.width < big.x + big.width &&\r\n      small.y > big.y &&\r\n      small.y + small.height < big.y + big.height\r\n    ) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  getRect (dot1, dot2) {\r\n    let rect = {}\r\n\r\n    if (dot1.x < dot2.x) {\r\n      rect.x = dot1.x\r\n      rect.width = dot2.x - dot1.x\r\n    } else {\r\n      rect.x = dot2.x\r\n      rect.width = dot1.x - dot2.x\r\n    }\r\n\r\n    if (dot1.y < dot2.y) {\r\n      rect.y = dot1.y\r\n      rect.height = dot2.y - dot1.y\r\n    } else {\r\n      rect.y = dot2.y\r\n      rect.height = dot1.y - dot2.y\r\n    }\r\n    return rect\r\n  }\r\n\r\n  getPosition (e) {\r\n    if (TOUCH_EVENT_MAP[e.type]) {\r\n      let poss = []\r\n      const len = e.touches.length\r\n      for (let i = 0; i < len; i++) {\r\n        poss.push({\r\n          x: e.touches[i].pageX,\r\n          y: e.touches[i].pageY\r\n        })\r\n      }\r\n      return poss\r\n    } else if (MOUSE_EVENT_MAP[e.type]) {\r\n      return [{\r\n        x: e.pageX,\r\n        y: e.pageY\r\n      }]\r\n    }\r\n  }\r\n\r\n  getDistance (dot1, dot2) {\r\n    return Math.sqrt(Math.pow(dot1.x - dot2.x, 2) + Math.pow(dot1.y - dot2.y, 2))\r\n  }\r\n\r\n  getAngle (dot1, dot2) {\r\n    return Math.atan2(dot2.y - dot1.y, dot2.x - dot1.x) * 180 / Math.PI\r\n  }\r\n\r\n  touchStart (e) {\r\n    this.state.swiping = true\r\n    this.touch.start = this.getPosition(e)[0]\r\n  }\r\n\r\n  touchMove (e) {\r\n    if (!this.touch.start) return\r\n    this.touch.end = this.getPosition(e)[0]\r\n    this.notice('swiping', this.getRect(this.touch.end, this.touch.start))\r\n  }\r\n\r\n  touchEnd (e) {\r\n    if (!this.touch.start) return\r\n    if (e.type === 'mouseup') {\r\n      this.touch.end = this.getPosition(e)[0]\r\n    }\r\n    let angle = this.getAngle(this.touch.end, this.touch.start)\r\n    if (angle > -45 && angle < 45) {\r\n      this.notice('swipe-left', this.getRect(this.touch.end, this.touch.start))\r\n    }\r\n    if (angle < -135 || angle > 135) {\r\n      this.notice('swipe-right', this.getRect(this.touch.end, this.touch.start))\r\n    }\r\n    if (angle > 45 && angle < 135) {\r\n      this.notice('swipe-up', this.getRect(this.touch.end, this.touch.start))\r\n    }\r\n    if (angle < -45 && angle > -135) {\r\n      this.notice('swipe-down', this.getRect(this.touch.end, this.touch.start))\r\n    }\r\n    this.notice('swiped', this.getRect(this.touch.end, this.touch.start))\r\n    this.state.swiping = false\r\n    this.touch.start = null\r\n  }\r\n\r\n  touchCancel (e) {\r\n    e.preventDefault()\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nexport default CovTouch\r\n","export * from \"-!../../node_modules/vue-style-loader/index.js??ref--3-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--3-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--3-oneOf-1-2!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./vue-slide.vue?vue&type=style&index=0&lang=css&\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(false);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".rd-swipe{height:400px;width:600px;margin:0 auto;position:relative;overflow:hidden;z-index:1}.rd-swipe-wrapper{position:relative;width:100%;height:100%;z-index:1;display:flex;transition-property:transform;box-sizing:content-box}.rd-swipe-item{width:100%;flex-shrink:0;height:100%;background-size:cover;background-position:50%}.rd-swipe-pagination{position:absolute;bottom:.5rem;width:100%;display:flex;justify-content:center}.rd-swipe-pagination-item{width:8px;height:8px;background:rgba(0,0,0,.5);z-index:1;margin:4px;border-radius:50%}.rd-swipe-pagination-item.active{background:rgba(0,0,0,.8)}.rd-swipe-pagination-item:hover{background:rgba(0,0,0,.3)}\", \"\"]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"rd-swipe\"},[_vm._ssrNode(\"<div class=\\\"rd-swipe-wrapper\\\"\"+(_vm._ssrStyle(null,_vm.wrapperStyle, null))+\">\",\"</div>\",[_vm._t(\"default\")],2),_vm._ssrNode(\" \"+((_vm.options.pagination)?(\"<div class=\\\"rd-swipe-pagination\\\">\"+(_vm._ssrList((_vm.pagination),function(item,index){return (\"<div\"+(_vm._ssrClass(\"rd-swipe-pagination-item\",{ 'active': item.active }))+\"></div>\")}))+\"</div>\"):\"<!---->\"))],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport CovTouch from './cov-touch'\r\n\r\nconst _ = {\r\n  on (el, type, handler) {\r\n    el.addEventListener(type, handler, false)\r\n  },\r\n  off (el, type, handler) {\r\n    el.addEventListener(type, handler, false)\r\n  }\r\n}\r\nexport default {\r\n  props: {\r\n    swipe: {\r\n      type: Object,\r\n      default () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      $wrapper: null,\r\n      $touch: null,\r\n      timer: null,\r\n      pagination: [],\r\n      swiper: {\r\n        swiping: false,\r\n        rect: {\r\n          width: 0,\r\n          height: 0\r\n        },\r\n        count: 0,\r\n        index: 0,\r\n        options: {}\r\n      },\r\n      position: {\r\n        x: 0,\r\n        y: 0,\r\n        z: 0\r\n      },\r\n      options: {\r\n        activeIndex: 0,\r\n        autoplay: 1000,\r\n        pagination: true\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    wrapperStyle () {\r\n      if (this.swiper.swiping) {\r\n        return {\r\n          transform: `translate3d(-${this.position.x}px, ${this.position.y}px, ${this.position.z}px)`,\r\n          '-webkit-transform': `translate3d(-${this.position.x}px, ${this.position.y}px, ${this.position.z}px)`\r\n        }\r\n      } else {\r\n        return {\r\n          transform: `translate3d(-${this.position.x}px, ${this.position.y}px, ${this.position.z}px)`,\r\n          '-webkit-transform': `translate3d(-${this.position.x}px, ${this.position.y}px, ${this.position.z}px)`,\r\n          transition: 'all .3s',\r\n          '-webkit-transition': 'all .3s'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    _.on(window, 'resize', this.init)\r\n    _.on(this.$el, 'resize', this.init)\r\n    this.init()\r\n  },\r\n  beforeDestroy () {\r\n    if (this.$touch) {\r\n      this.$touch.destroy()\r\n    }\r\n  },\r\n  methods: {\r\n    init () {\r\n      this.options = Object.assign(this.options, this.swipe)\r\n      this.$wrapper = this.$el.getElementsByClassName('rd-swipe-wrapper')[0]\r\n      this.swiper.count = this.$el.getElementsByClassName('rd-swipe-item').length\r\n      this.swiper.rect = this.$el.getBoundingClientRect()\r\n\r\n      if (this.options.pagination) {\r\n        this.pagination = Array.from({length: this.swiper.count}).map((item, index) => {\r\n          return {\r\n            index: index,\r\n            active: index === 0\r\n          }\r\n        })\r\n      }\r\n\r\n      this.initSwipe()\r\n      if (this.swipe.autoplay) {\r\n        this.startAutoPlay(this.swipe.autoplay)\r\n      }\r\n    },\r\n    initSwipe () {\r\n      if (this.$touch) {\r\n        this.$touch.destroy()\r\n      }\r\n      this.$touch = new CovTouch({el: this.$el})\r\n      this.$touch.listen('swipe-left', null, () => {\r\n        this.swiper.swiping = false\r\n        this.next()\r\n      })\r\n      this.$touch.listen('swipe-right', null, () => {\r\n        this.swiper.swiping = false\r\n        this.pre()\r\n      })\r\n      let movediff = 0\r\n\r\n      this.$touch.listen('swiping', null, (start, end) => {\r\n        this.swiper.swiping = true\r\n        let move = start.x - end.x\r\n        this.position.x += (move - movediff)\r\n        movediff = move\r\n      })\r\n\r\n      this.$touch.listen('swiped', null, (start, end) => {\r\n        movediff = 0\r\n        this.swiper.swiping = false\r\n      })\r\n    },\r\n    startAutoPlay (delay) {\r\n      this.stopAutoPlay()\r\n      this.timer = setInterval(this.play, delay || this.options.autoplay)\r\n    },\r\n    stopAutoPlay () {\r\n      if (this.timer) {\r\n        window.clearInterval(this.timer)\r\n        window.clearTimeout(this.timer)\r\n        this.timer = null\r\n      }\r\n    },\r\n    play () {\r\n      if (this.swiper.index === (this.swiper.count - 1)) {\r\n        this.swiper.index = -1\r\n      }\r\n      if (this.swiper.swiping) return\r\n      this.next()\r\n    },\r\n    next () {\r\n      if (this.swiper.index < this.swiper.count - 1) {\r\n        this.swiper.index++\r\n      }\r\n      this.position.x = (this.swiper.rect.width * this.swiper.index)\r\n      this.checkOut()\r\n    },\r\n    pre () {\r\n      if (this.swiper.index > 0) {\r\n        this.swiper.index--\r\n      }\r\n      this.position.x = (this.swiper.rect.width * this.swiper.index)\r\n      this.checkOut()\r\n    },\r\n    turnTo (index) {\r\n      index = Math.floor(index)\r\n      if (index < -1 || index > this.swiper.count) return console.error('invaild index: ', index)\r\n      this.stopAutoPlay()\r\n      this.swiper.index = index\r\n      this.position.x = (this.swiper.rect.width * index)\r\n      this.checkOut()\r\n      this.timer = setTimeout(() => {\r\n        this.startAutoPlay()\r\n      }, this.swipe.autoplay * 2)\r\n    },\r\n    setPaginationActive (index) {\r\n      // this.pagination.forEach(item => item.active = false)\r\n      // this.pagination[index].active = true\r\n    },\r\n    checkOut () {\r\n      this.swipe.activeIndex = this.swiper.index\r\n      if (this.options.pagination) {\r\n        this.setPaginationActive(this.swiper.index)\r\n      }\r\n      if (this.position.x > (this.swiper.rect.width * this.swiper.count)) {\r\n        this.position.x = (this.swiper.rect.width * this.swiper.count)\r\n      }\r\n      if (this.position.x < 0) {\r\n        this.position.x = 0\r\n      }\r\n    }\r\n  }\r\n}\r\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./vue-slide.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./vue-slide.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./vue-slide.vue?vue&type=template&id=a43bac3c&\"\nimport script from \"./vue-slide.vue?vue&type=script&lang=js&\"\nexport * from \"./vue-slide.vue?vue&type=script&lang=js&\"\nfunction injectStyles (context) {\n  \n  var style0 = require(\"./vue-slide.vue?vue&type=style&index=0&lang=css&\")\nif (style0.__inject__) style0.__inject__(context)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  null,\n  \"b2be7074\"\n  \n)\n\nexport default component.exports"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AAAA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAPA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlPA;AACA;AAmPA;;;;;;;;ACzQA;AAAA;AAAA;AAAA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACNA;AACA;AACA;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AALA;AADA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AApBA;AA0BA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAhBA;AACA;AAgBA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AA3GA;AAhEA;;AC1EA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}